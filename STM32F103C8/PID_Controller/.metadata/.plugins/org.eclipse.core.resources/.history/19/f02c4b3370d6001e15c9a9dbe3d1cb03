/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * <h2><center>&copy; Copyright (c) 2024 STMicroelectronics.
 * All rights reserved.</center></h2>
 *
 * This software component is licensed by ST under BSD 3-Clause license,
 * the "License"; You may not use this file except in compliance with the
 * License. You may obtain a copy of the License at:
 *                        opensource.org/licenses/BSD-3-Clause
 *
 ******************************************************************************
 */

/*===============================================================================
 *                                Includes                                       *
 ================================================================================*/

#include "stm32f103c8.h"
#include "stm32f103c8_rcc_driver.h"
#include "stm32f103c8_exti_driver.h"
#include "stm32f103c8_gpio_driver.h"
#include "stm32f103c8_timer_driver.h"

/*===============================================================================
 *                            		  MACROS	                                 *
 ================================================================================*/



/*===============================================================================
 *                              Global Variables                                 *
 ================================================================================*/




void EncoderISR(void)
{

}


int main(void)
{
	MCAL_RCC_initSYSClk();

	EXTI_PinConfig_t exti_cfg;
	exti_cfg.EXTIx_Pin = EXTI4PA4;
	exti_cfg.EXTI_TriggerCase = EXTI_RISING_TRIG;
	exti_cfg.EXTI_IRQ = EXTI_IRQ_ENABLE;
	exti_cfg.p_EXTI_ISR_CallBack = EncoderISR;
	MCAL_EXTI_GPIO_Init(p_EXTI_Config);

	PID_Controller pid_cfg;
	pid_cfg.Kp = 60.0;
	pid_cfg.Ki = 0.01;
	pid_cfg.Kd = 10.0;



    /* Loop forever */
	while(1)
	{

	}
}
